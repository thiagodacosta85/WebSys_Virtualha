plot(table(popDecrescente$ZONA), type = "2")
plot(table(popDecrescente$ZONA), type = "2")
plot(table(popDecrescente$ZONA), horiz = "TRUE")
plot(table(popDecrescente$ZONA)
table(popDecrescente$ZONA, popDecrescente$ATIV)
plot(table(popDecrescente$ZONA)
plot(table(popDecrescente$ZONA))
pie(table(popDecrescente$ZONA))
pie(table(popDecrescente$ZONA, popDecrescente$ATIV))
pie(table(popDecrescente$ZONA))
pie(table(popDecrescente$ATIV))
pie(table(popDecrescente$ZONA))
pie(table(popDecrescente$ATIV))
pie(table(popDecrescente$ATIV), colorspaces)
pie(table(popDecrescente$ATIV), col = blues9)
pie(table(popDecrescente$ATIV), col = "darkcyan")
pie(table(popDecrescente$ATIV), col = blues9)
pie(table(popDecrescente$ATIV), col = blues9)
pie(table(popDecrescente$ZONA))
pie(table(popDecrescente$ZONA), col = blues9)
pie(table(popDecrescente$ATIV), col = blues9)
pie(table(popDecrescente$ZONA), col = blues9)
pie(table(popDecrescente$ATIV), col = blues9)
pie(table(popDecrescente$ZONA), col = blues9)
box()
pie(table(popDecrescente$ATIV), col = blues9)
box()
pie(table(popDecrescente$ATIV), col = blues9, main = "Distribuição das Atividades")
box()
pie(table(popDecrescente$ZONA), col = blues9, main = "Quantidades por Zona")
box()
pie(table(popDecrescente$ATIV), col = blues9, main = "Distribuição das Atividades")
box()
box()
box()
box()
pie(table(popDecrescente$ZONA), col = blues9, main = "Quantidades por Zona")
box()
pie(table(popDecrescente$ATIV), col = blues9, main = "Distribuição das Atividades")
box()
par(mar=c(2,2,2,2))
pie(table(popDecrescente$ATIV), col = blues9, main = "Distribuição das Atividades")
box()
par(mar=c(2,2,2,2))
pie(table(popDecrescente$ZONA), col = blues9, main = "Quantidades por Zona")
box()
par(mar=c(2,2,2,2))
pie(table(popDecrescente$ATIV), col = blues9, main = "Distribuição das Atividades")
box()
par(mar=c(2,5,5,2))
pie(table(popDecrescente$ZONA), col = blues9, main = "Quantidades por Zona")
box()
par(mar=c(2,2,2,2))
par(mar=c(2,10,10,2))
pie(table(popDecrescente$ZONA), col = blues9, main = "Quantidades por Zona")
box()
par(mar=c(2,2,2,2))
pie(table(popDecrescente$ZONA), col = blues9, main = "Quantidades por Zona")
box()
par(mar=c(2,2,10,10))
pie(table(popDecrescente$ZONA), col = blues9, main = "Quantidades por Zona")
box()
par(mar=c(2,2,2,10))
pie(table(popDecrescente$ZONA), col = blues9, main = "Quantidades por Zona")
box()
par(mar=c(10,2,2,10))
pie(table(popDecrescente$ZONA), col = blues9, main = "Quantidades por Zona")
box()
par(mar=c(2,10,10,2))
pie(table(popDecrescente$ZONA), col = blues9, main = "Quantidades por Zona")
box()
par(mar=c(0,0,0,0))
pie(table(popDecrescente$ZONA), col = blues9, main = "Quantidades por Zona")
box()
par(mar=c(2,0,0,0))
pie(table(popDecrescente$ZONA), col = blues9, main = "Quantidades por Zona")
box()
par(mar=c(2,2,0,0))
pie(table(popDecrescente$ZONA), col = blues9, main = "Quantidades por Zona")
box()
par(mar=c(2,2,2,0))
pie(table(popDecrescente$ZONA), col = blues9, main = "Quantidades por Zona")
box()
par(mar=c(2,2,2,2))
pie(table(popDecrescente$ZONA), col = blues9, main = "Quantidades por Zona")
box()
par(mar=c(2,2,2,20))
pie(table(popDecrescente$ZONA), col = blues9, main = "Quantidades por Zona")
box()
par(mar=c(2,2,2,20))
pie(table(popDecrescente$ATIV), col = blues9, main = "Distribuição das Atividades")
box()
par(mar=c(2,2,2,15))
pie(table(popDecrescente$ATIV), col = blues9, main = "Distribuição das Atividades")
box()
par(mar=c(2,2,2,18))
pie(table(popDecrescente$ATIV), col = blues9, main = "Distribuição das Atividades")
box()
par(mar=c(2,2,2,10))
pie(table(popDecrescente$ATIV), col = blues9, main = "Distribuição das Atividades")
box()
par(mar=c(2,2,2,12))
pie(table(popDecrescente$ATIV), col = blues9, main = "Distribuição das Atividades")
box()
par(mar=c(2,2,2,11))
pie(table(popDecrescente$ATIV), col = blues9, main = "Distribuição das Atividades")
box()
par(mar=c(2,2,2,8))
pie(table(popDecrescente$ATIV), col = blues9, main = "Distribuição das Atividades")
box()
par(mar=c(2,2,2,10))
pie(table(popDecrescente$ATIV), col = blues9, main = "Distribuição das Atividades")
box()
par(mar=c(2,2,2,14))
pie(table(popDecrescente$ATIV), col = blues9, main = "Distribuição das Atividades")
box()
par(mar=c(2,2,2,13))
pie(table(popDecrescente$ATIV), col = blues9, main = "Distribuição das Atividades")
box()
par(mar=c(2,2,2,15))
pie(table(popDecrescente$ATIV), col = blues9, main = "Distribuição das Atividades")
box()
box()
pie(table(popDecrescente$ATIV), col = blues9, main = "Distribuição das Atividades")
par(mar=c(2,2,2,15))
pie(table(popDecrescente$ATIV), col = blues9, main = "Distribuição das Atividades")
box()
par(mar=c(2,2,2,2))
pie(table(popDecrescente$ZONA), col = blues9, main = "Quantidades por Zona")
box()
par(mar=c(2,2,2,2))
pie(table(popDecrescente$ATIV), col = blues9, main = "Distribuição das Atividades")
box()
deficitTrabDispo <- sum((localidades[,7]-localidades[,8])*-1)
print(c("O total de vagas de trabalho não preenchidas é:", deficitTrabDispo))
popDecrescente <-   arrange(select(localidades, NOME, ZONA, POPULACAO, ATIV),desc(POPULACAO))
print(popDecrescente)
table(popDecrescente$ZONA)
table(popDecrescente$ATIV)
table(popDecrescente$ZONA, popDecrescente$ATIV)
pie(table(popDecrescente$ZONA))
par(mar=c(2,2,2,2))
pie(table(popDecrescente$ZONA), col = blues9, main = "Quantidades por Zona")
box()
par(mar=c(2,2,2,2))
pie(table(popDecrescente$ATIV), col = blues9, main = "Distribuição das Atividades")
par(mar=c(2,2,2,2))
pie(table(popDecrescente$ZONA), col = blues9, main = "Quantidades por Zona")
box()
par(mar=c(4,14,1,2))
barplot(height = localidades$POPULACAO, names = localidades$NOME, main = "Distribuição Populacional",
col = "cornflowerblue", horiz = TRUE, las=2)
box()
box()
par(mar=c(14,4,2,1))
barplot(height = localidades$POPULACAO, names = localidades$NOME, main = "Distribuição Populacional",
col = "cornflowerblue", las=2)
box()
par(mar=c(2,2,2,2))
boxplot(table(popDecrescente$ATIV), col = blues9, main = "Distribuição das Atividades")
box()
par(mar=c(2,2,2,2))
boxplot(table(popDecrescente$ATIV, popDecrescente$ZONA), col = blues9, main = "Distribuição das Atividades")
box()
boxplot(table(popDecrescente$ATIV, popDecrescente$NOME), col = blues9, main = "Distribuição das Atividades")
box()
par(mar=c(2,2,2,2))
barplot(table(popDecrescente$ATIV, popDecrescente$ZONA), col = blues9, main = "Distribuição das Atividades")
box()
View(popDecrescente)
View(popDecrescente)
par(mar=c(2,2,2,2))
barplot(table(popDecrescente$NOME, popDecrescente$ZONA), col = blues9, main = "Distribuição das Atividades")
box()
barplot(table(popDecrescente$POPULACAO, popDecrescente$ZONA), col = blues9, main = "Distribuição das Atividades")
barplot(table(popDecrescente$POPULACAO, popDecrescente$ATIV), col = blues9, main = "Distribuição das Atividades")
box()
barplot(table(popDecrescente$POPULACAO, popDecrescente$ATIV), main = "Distribuição das Atividades")
box()
barplot(table(popDecrescente$POPULACAO, popDecrescente$ATIV), col = blue, main = "Distribuição das Atividades")
box()
par(mar=c(2,2,2,2))
barplot(table(popDecrescente$POPULACAO, popDecrescente$ATIV), col = blue, main = "Distribuição das Atividades")
box()
barplot(table(popDecrescente$POPULACAO, popDecrescente$ATIV), col = "cornflowerblue", main = "Distribuição das Atividades")    box()
par(mar=c(2,2,2,2))
barplot(table(popDecrescente$POPULACAO, popDecrescente$ATIV), col = "cornflowerblue", main = "Distribuição das Atividades")    box()
par(mar=c(2,2,2,2))
barplot(table(popDecrescente$POPULACAO, popDecrescente$ATIV), col = "cornflowerblue", main = "Distribuição das Atividades")
box()
barplot(table(popDecrescente$POPULACAO, popDecrescente$ATIV), col = "cornflowerblue", main = "Distribuição Populacional por Tipo de Atividade")
box()
View(localidades)
View(localidades)
setwd("C:/llpDigital/WebSys_Virtualha/dataAnalysis")
if(!require(dplyr))
install.packages("dplyr")
library(dplyr)
if(!require(tidyr))
install.packages("tidyr")
library(tidyr)
if(!require(psych))
install.packages("psych")
library(psych)
if(!require(RColorBrewer))
install.packages("RColorBrewer")
library(RColorBrewer)
localidades <- read.csv("C:/llpDigital/WebSys_Virtualha/dataAnalysis/data/localidades.csv", header=TRUE, sep = ";", fileEncoding = 'latin1')
localidades$DATA_FUND <- as.Date(localidades$DATA_FUND, format = "%Y-%m-%d")
View(localidades)
str(localidades)
head(localidades)
par(mar=c(14,4,2,1))
barplot(height = localidades$POPULACAO, names = localidades$NOME, main = "Distribuição Populacional",
col = "cornflowerblue", las=2)
box()
par(mar=c(4,14,1,2))
barplot(height = localidades$POPULACAO, names = localidades$NOME, main = "Distribuição Populacional",
col = "cornflowerblue", horiz = TRUE, las=2)
box()
descritiva <- localidades[ ,c(-1,-2,-3,-15,-17)]
head(descritiva)
tail(descritiva)
sapply(descritiva, min)
sapply(descritiva, mean)
sapply(descritiva,median)
sapply(descritiva, max)
typeof(descritiva$VIS_TUR)
head(descritiva)
unique(localidades$NOME)
print(localidades$NOME[localidades$ZONA == "C", ])
print(localidades$NOME)
glimpse(localidades)
table(localidades$VALOR_MED_TERRENO)
table(localidades$NOME, localidades$POPULACAO)
names(localidades)
select(localidades, NOME, ZONA, POPULACAO, ATIV)
as.list(localidades)
class(localidades[17])
localidades[1,]
sum(localidades[,4])
sum(localidades[,5])
sum(localidades[,6])
sum(localidades[,7])
sum(localidades[,8])
deficitTrabDispo <- sum((localidades[,7]-localidades[,8])*-1)
print(c("O total de vagas de trabalho não preenchidas é:", deficitTrabDispo))
popDecrescente <-   arrange(select(localidades, NOME, ZONA, POPULACAO, ATIV),desc(POPULACAO))
print(popDecrescente)
table(popDecrescente$ZONA)
table(popDecrescente$ATIV)
table(popDecrescente$ZONA, popDecrescente$ATIV)
pie(table(popDecrescente$ZONA))
par(mar=c(2,2,2,2))
pie(table(popDecrescente$ZONA), col = blues9, main = "Quantidades por Zona")
box()
par(mar=c(2,2,2,2))
pie(table(popDecrescente$ATIV), col = blues9, main = "Distribuição das Atividades")
box()
par(mar=c(2,2,2,2))
barplot(table(popDecrescente$POPULACAO, popDecrescente$ATIV), col = "cornflowerblue", main = "Distribuição Populacional por Tipo de Atividade")
box()
x <- c(1, 2, 3, 4)
sqrt(sum(x))
x %>% sum() %>% sqrt()
esfrie(
asse(
coloque(
bata(
acrescente(
recipiente(
rep("farinha", 2),
"água",
"fermento",
"leite",
"óleo"
),
"farinha",
ate = "macio"
),
duracao = "3min"
),
lugar = "forma",
tipo = "grande",
untada = TRUE
),
duracao = "50min"
),
lugar = "geladeira",
duracao = "20min"
)
resetGeneric()
resetClass()
exit
setwd("C:/llpDigital/WebSys_Virtualha/dataAnalysis")
if(!require(RMySQl))
install.packages("RMySQl")
library(RMySQl)
install.packages("RMySQl")
install.packages("RMySQL")
library(RMySQL)
setwd("C:/llpDigital/WebSys_Virtualha/dataAnalysis")
if(!require(RMySQL))
install.packages("RMySQL")
library(RMySQL)
database <- dbConnect(MySQL(), user='thiago', password='password', dbname='virtualha', host='192.168.0.110')
database <- dbConnect(MySQL(), user='llpdigital', password='password', dbname='virtualha', host='192.168.0.110')
View(database)
database <- dbConnect(MySQL(), user='thiago', password='password', dbname='virtualha', host='192.168.0.110')
database <- dbConnect(MySQL(), user='llpdigital', password='password', dbname='virtualha', host='192.168.0.110')
dbListTables(database)
dbListFields(database, 'localidades')
dbSendQuery(database, 'select * from localidades')
View(database)
localidades  <- dbSendQuery(database, "select * from localidades")
View(database)
setwd("C:/llpDigital/WebSys_Virtualha/dataAnalysis")
if(!require(RMySQL))
install.packages("RMySQL")
library(RMySQL)
database <- dbConnect(MySQL(), user='llpdigital', password='password', dbname='virtualha', host='192.168.0.110')
dbListTables(database)
dbListFields(database, 'localidades')
localidades  <- dbSendQuery(database, "select * from localidades")
View(localidades)
View(localidades)
data = fetch(localidades, n-1)
data  <-  fetch(localidades, n-1)
data  <-  fetch(localidades, n=-1)
View(data)
View(data)
setwd("C:/llpDigital/WebSys_Virtualha/dataAnalysis")
if(!require(RMySQL))
install.packages("RMySQL")
library(RMySQL)
database <- dbConnect(MySQL(), user='llpdigital', password='password', dbname='virtualha', host='192.168.0.110')
dbListTables(database)
dbListFields(database, 'localidades')
table  <- dbSendQuery(database, "select * from localidades")
localidades  <-  fetch(table, n=-1)
View(localidades)
View(localidades)
str(localidades)
View(localidades)
setwd("C:/llpDigital/WebSys_Virtualha/dataAnalysis")
if(!require(RMySQL))
install.packages("RMySQL")
library(RMySQL)
database <- dbConnect(MySQL(), user='llpdigital', password='password', dbname='virtualha', host='192.168.0.110')
dbListTables(database)
dbListFields(database, 'localidades')
table  <- dbSendQuery(database, "select * from localidades")
localidades  <-  fetch(table, n=-1)
localidades$DATA_FUND <- as.Date(localidades$DATA_FUND, format = "%Y-%m-%d")
View(localidades)
str(localidades)
setwd("C:/llpDigital/WebSys_Virtualha/dataAnalysis")
if(!require(RMySQL))
install.packages("RMySQL")
library(RMySQL)
if(!require(dplyr))
install.packages("dplyr")
library(dplyr)
if(!require(tidyr))
install.packages("tidyr")
library(tidyr)
if(!require(psych))
install.packages("psych")
library(psych)
if(!require(RColorBrewer))
install.packages("RColorBrewer")
library(RColorBrewer)
# ========= deprecated ===========
#localidades <- read.csv("C:/llpDigital/WebSys_Virtualha/dataAnalysis/data/localidades.csv", header=TRUE, sep = ";", fileEncoding = 'latin1')
#localidades$DATA_FUND <- as.Date(localidades$DATA_FUND, format = "%Y-%m-%d")
#View(localidades)
#str(localidades)
#head(localidades)
#=================================
#-->passando cores da paleta RColorBrewer<--
#brewer.pal.info
#color <- brewer.pal(09, "Reds")
#par(mar=c(14,4,2,1))
#barplot(height = localidades$POPULACAO, names = localidades$NOME, col = color, las=2)
#box()
database <- dbConnect(MySQL(), user='llpdigital', password='password', dbname='virtualha', host='192.168.0.110')
dbListTables(database)
dbListFields(database, 'localidades')
table  <- dbSendQuery(database, "select * from localidades")
localidades  <-  fetch(table, n=-1)
localidades$DATA_FUND <- as.Date(localidades$DATA_FUND, format = "%Y-%m-%d")
str(localidades)
View(localidades)
barplot(height = localidades$POPULACAO, names = localidades$NOME, main = "Distribuição Populacional",
col = "cornflowerblue", las=2)
box()
par(mar=c(4,14,1,2))
barplot(height = localidades$POPULACAO, names = localidades$NOME, main = "Distribuição Populacional",
col = "cornflowerblue", horiz = TRUE, las=2)
box()
descritiva <- localidades[ ,c(-1,-2,-3,-15,-17)]
head(descritiva)
tail(descritiva)
sapply(descritiva, min)
sapply(descritiva, mean)
sapply(descritiva,median)
sapply(descritiva, max)
typeof(descritiva$VIS_TUR)
head(descritiva)
unique(localidades$NOME)
print(localidades$NOME[localidades$ZONA == "C", ])
print(localidades$NOME)
glimpse(localidades)
table(localidades$VALOR_MED_TERRENO)
table(localidades$NOME, localidades$POPULACAO)
names(localidades)
select(localidades, NOME, ZONA, POPULACAO, ATIV)
as.list(localidades)
class(localidades[17])
localidades[1,]
sum(localidades[,4])
sum(localidades[,5])
sum(localidades[,6])
sum(localidades[,7])
sum(localidades[,8])
deficitTrabDispo <- sum((localidades[,7]-localidades[,8])*-1)
print(c("O total de vagas de trabalho não preenchidas é:", deficitTrabDispo))
popDecrescente <-   arrange(select(localidades, NOME, ZONA, POPULACAO, ATIV),desc(POPULACAO))
print(popDecrescente)
table(popDecrescente$ZONA)
table(popDecrescente$ATIV)
table(popDecrescente$ZONA, popDecrescente$ATIV)
pie(table(popDecrescente$ZONA))
par(mar=c(2,2,2,2))
pie(table(popDecrescente$ZONA), col = blues9, main = "Quantidades por Zona")
box()
par(mar=c(2,2,2,2))
pie(table(popDecrescente$ATIV), col = blues9, main = "Distribuição das Atividades")
box()
par(mar=c(2,2,2,2))
barplot(table(popDecrescente$POPULACAO, popDecrescente$ATIV), col = "cornflowerblue", main = "Distribuição Populacional por Tipo de Atividade")
box()
View(table)
View(table)
is()
is(deficitTrabDispo)
#str(localidades)
#head(localidades)
#=================================
data()
library(tidyverse)
library(psych)
library(psych)
setwd("C:/llpDigital/WebSys_Virtualha/dataAnalysis")
if(!require(RMySQL))
install.packages("RMySQL")
library(RMySQL)
if(!require(tidyverse))
install.packages("tidyverse")
library(tidyverse)
database <- dbConnect(MySQL(), user='llpdigital', password='password',
dbname='virtualha', host='192.168.0.110')
dbListTables(database)
dbListFields(database, 'localidades')
table  <- dbSendQuery(database, "select * from localidades")
localidades  <-  fetch(table, n=-1)
localidades$DATA_FUND <- as.Date(localidades$DATA_FUND, format = "%Y-%m-%d")
str(localidades)
View(localidades)
summary()
summary(localidades)
summarise(localidades)
summarise_all(localidades)
summary(localidades)
quantile(localidades$POPULACAO)
median(localidades$POPULACAO)
mean(localidades$POPULACAO)
mean(localidades$POPULACAO)
median(localidades$POPULACAO)
summary(localidades)
median(localidades$POPULACAO)
mean(localidades$POPULACAO)
quantile(localidades$POPULACAO)
?dplyr
?rnorm
head(localidades)
tail(localidades)
summary(localidades)
head(localidades)
str(localidades)
summary(localidades)
str(localidades)
str(localidades)
str(localidades)
summary(localidades)
head(localidades)
tail(localidades)
is.na(localidades)
is.vector(localidades)
is.na(localidades)
is.vector(localidades$DATA_FUND)
is.vector(localidades$NOME)
str(localidades)
is.vector(localidades$ZONA)
is.vector(localidades$ATIV)
is.vector(localidades$ID_LOCAL)
is.vector(localidades$DATA_FUND)
describe(localidades$DATA_FUND)
class(localidades$DATA_FUND)
class(localidades$ID_LOCAL)
localidades %>% select(ID_LOCAL, NOME)
localidades %>% select(NOME, ZONA, POPULACAO, ATIV)
